<script lang="ts">
	import type { TableTemplateBuilder } from '@tylertech/forge';
	import { onMount } from 'svelte';

	onMount(async () => {
        const { TextFieldComponentDelegate } = await import('@tylertech/forge/esm/text-field');
		const table = document.querySelector('forge-table');
		if (!table) return;
		table.data = [
			{
				name: 'tcp-admincenter-shell',
				github: 'https://github.com/tyler-technologies/tcp-admincenter',
				harness:
					'https://app.harness.io/#/account/NVsV7gjbTZyA3CgSgXNOcg/service-instances/app/RNgKTaZsR-2857AB3pf7Rg/service/Zla8vCGFSdCXHX0PsiyNdw?CsejwCJFTtG6AyAW6tlYyQ?',
				baseUrl: 'https://{customer}-admin.{env}.com',
				path: '/org/admin-center/api/appconfig',
				rum: 'https://app.datadoghq.com/rum/performance-monitoring?from_ts=1685947561319&live=true&query=%40application.id%3A395cd87b-c09e-4792-b33e-3fbf83cda80b+env%3Atcpprod-1&to_ts=1686033961319',
				logs: 'https://app.datadoghq.com/logs?query=service%3Atcp-admincenter-shell&cols=host%2Cservice&index=%2A&messageDisplay=inline&stream_sort=desc&viz=stream&from_ts=1685947741896&to_ts=1686034141896&live=true'
			},
			{
				name: 'tcp-admincenter-dashboard',
				github: 'https://github.com/tyler-technologies/tcp-admincenter',
				harness:
					'https://app.harness.io/#/account/NVsV7gjbTZyA3CgSgXNOcg/service-instances/app/RNgKTaZsR-2857AB3pf7Rg/service/fXUTJ1WTQe2iBLhpK7hOJA',
				baseUrl: 'https://{customer}-admin.{env}.com',
				path: '/org/admin-center/dashboard',
				rum: 'https://app.datadoghq.com/rum/performance-monitoring?from_ts=1685947561319&live=true&query=%40application.id%3A395cd87b-c09e-4792-b33e-3fbf83cda80b+env%3Atcpprod-1&to_ts=1686033961319',
				logs: 'https://app.datadoghq.com/logs?query=service%3Atcp-admincenter-dashboard-mfe&cols=host%2Cservice&index=%2A&messageDisplay=inline&stream_sort=desc&viz=stream&from_ts=1685947833421&to_ts=1686034233421&live=true'
			},
			{
				name: 'tcp-admincenter-usermanagement',
				github: 'https://github.com/tyler-technologies/tcp-admincenter',
				harness:
					'https://app.harness.io/#/account/NVsV7gjbTZyA3CgSgXNOcg/service-instances/app/RNgKTaZsR-2857AB3pf7Rg/service/fWEyaC8jSb2_IeswVG16Nw',
				baseUrl: 'https://{customer}-admin.{env}.com',
				path: '/org/admin-center/users',
				rum: 'https://app.datadoghq.com/rum/performance-monitoring?from_ts=1685947561319&live=true&query=%40application.id%3A395cd87b-c09e-4792-b33e-3fbf83cda80b+env%3Atcpprod-1&to_ts=1686033961319',
				logs: 'https://app.datadoghq.com/logs?query=service%3Atcp-admincenter-user-management-mfe&cols=host%2Cservice&index=%2A&messageDisplay=inline&stream_sort=desc&viz=stream&from_ts=1685947833421&to_ts=1686034233421&live=true'
			},
			{
				name: 'tcp-admincenter-configuration',
				github: 'https://github.com/tyler-technologies/tcp-admincenter',
				harness:
					'https://app.harness.io/#/account/NVsV7gjbTZyA3CgSgXNOcg/service-instances/app/RNgKTaZsR-2857AB3pf7Rg/service/ZHJvQBQZTqG0a-hc10R4qw',
				baseUrl: 'https://{customer}-admin.{env}.com',
				path: '/org/admin-center/configuration',
				rum: 'https://app.datadoghq.com/rum/performance-monitoring?from_ts=1685947561319&live=true&query=%40application.id%3A395cd87b-c09e-4792-b33e-3fbf83cda80b+env%3Atcpprod-1&to_ts=1686033961319',
				logs: 'https://app.datadoghq.com/logs?query=service%3Atcp-admincenter-configuration-mfe&cols=host%2Cservice&index=%2A&messageDisplay=inline&stream_sort=desc&viz=stream&from_ts=1685947833421&to_ts=1686034233421&live=true'
			},
			{
				name: 'tcp-profile-c',
				harness:
					'https://app.harness.io/#/account/NVsV7gjbTZyA3CgSgXNOcg/service-instances/app/RNgKTaZsR-2857AB3pf7Rg/service/6LUaFosuQrmpkkfjQegsBA',
				github: 'https://github.com/tyler-technologies/tcp-profile-c',
				baseUrl: 'https://profile.{env}.com',
				path: '/portal/profile'
			},
			{
				name: 'tcp-launcher-e',
				harness:
					'https://app.harness.io/#/account/NVsV7gjbTZyA3CgSgXNOcg/service-instances/app/RNgKTaZsR-2857AB3pf7Rg/service/kWCli6f-RWy1BNaSb3Xsvw',
				github: 'https://github.com/tyler-technologies/tcp-launcher-e',
				baseUrl: 'https://{customer}.{env}.com',
				path: '/portal/enterpriselauncher'
			}
		];
		const github: TableTemplateBuilder = (
			rowIndex: number,
			div: HTMLElement,
			rowData: any,
			columnIndex: number
		) => {
			const anchor = document.createElement('a');
			anchor.href = rowData.github;
			anchor.innerText = 'github';
			return anchor;
		};
		const harness: TableTemplateBuilder = (
			rowIndex: number,
			div: HTMLElement,
			rowData: any,
			columnIndex: number
		) => {
			const anchor = document.createElement('a');
			anchor.href = rowData.harness;
			anchor.innerText = 'harness';
			return anchor;
		};

		const datadog: TableTemplateBuilder = (
			rowIndex: number,
			div: HTMLElement,
			rowData: any,
			columnIndex: number
		) => {
			const span = document.createElement('span');
			const log = document.createElement('a');
			log.href = rowData.log;
			log.innerText = 'log';
			span.appendChild(log);

			const rum = document.createElement('a');
			rum.href = rowData.rum;
			rum.innerText = 'rum';
			span.appendChild(rum);
			return span;
		};
		const customer = 'waynecountypa';
		const ciUrl = (baseUrl: string, path: string) =>
			`${baseUrl}${path}`.replace('{env}', 'tcpci').replace('{customer}', customer);
		const qaUrl = (baseUrl: string, path: string) =>
			`${baseUrl}${path}`.replace('{env}', 'tcpqa').replace('{customer}', customer);
		const prodUrl = (baseUrl: string, path: string) =>
			`${baseUrl}${path}`.replace('{env}', 'tylerportico').replace('{customer}', customer);
		const envs: TableTemplateBuilder = (
			rowIndex: number,
			div: HTMLElement,
			rowData: any,
			columnIndex: number
		) => {
			const span = document.createElement('span');
			const ci = document.createElement('a');
			ci.href = ciUrl(rowData.baseUrl, rowData.path);
			ci.innerText = 'tcpci';
			span.appendChild(ci);

			const qa = document.createElement('a');
			qa.href = qaUrl(rowData.baseUrl, rowData.path);
			qa.innerText = 'tcpqa';
			span.appendChild(qa);

			const prod = document.createElement('a');
			prod.href = prodUrl(rowData.baseUrl, rowData.path);
			prod.innerText = 'prod';
			span.appendChild(prod);

			return span;
		};
		const cellStyle = {
			padding: '0',
			color: 'var(--mdc-theme-text-secondary-on-background)'
		};

		function createTextFieldFilterDelegate(
			placeholder = 'Filter',
			attributes?: Map<string, string>
		) {
			// Icon button comp
			const iconButtonComp = document.createElement('forge-icon-button');
			iconButtonComp.dense = true;

			// Button ele
			const button = document.createElement('button');
			button.type = 'button';
			button.ariaLabel = 'clear filter';
			button.addEventListener('click', () => {
				const parentTextField = iconButtonComp.parentElement;
				if (!parentTextField) {
					return;
				}

				const input = parentTextField.querySelector('input');
				if (!!input) {
					input.value = '';

					// Must manually dispatch an input event when changing the input value programmatically
					input.dispatchEvent(new Event('input'));
				}
			});

			// Icon comp
			const iconComp = document.createElement('forge-icon');
			iconComp.name = 'close';

			// Compose the trailing "clear filter" icon-button
			button.append(iconComp);
			iconButtonComp.append(button);

			// Create delegate
			const delegate = new TextFieldComponentDelegate({
				options: { placeholder, trailingElement: iconButtonComp, attributes }
			});

			return delegate;
		}

		table.columnConfigurations = [
			{
				property: 'name',
				header: 'Name',
				sortable: true,
				preventUnsort: true,
				filter: true,
				filterDelegate: createTextFieldFilterDelegate('Filter product name')
			},
			{
				template: github,
				cellStyle
			},
			{
				template: harness,
				cellStyle
			},
			{
				template: datadog,
				cellStyle
			},
			{
				template: envs,
				cellStyle
			}
		];
	});
</script>

<h1>test</h1>
<forge-table filter/>
